"""adding all tables

Revision ID: 4980919af044
Revises:
Create Date: 2025-01-27 20:52:25.006408

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "4980919af044"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Bro",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bro_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("bromotion", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email_hash", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("password_hash", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("salt", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("origin", sa.Integer(), nullable=False),
        sa.Column("default_avatar", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Bro")),
    )
    op.create_index(op.f("ix_Bro_bro_name"), "Bro", ["bro_name"], unique=False)
    op.create_index(op.f("ix_Bro_bromotion"), "Bro", ["bromotion"], unique=False)
    op.create_table(
        "BroToken",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bro_id", sa.Integer(), nullable=False),
        sa.Column("access_token", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("token_expiration", sa.Integer(), nullable=False),
        sa.Column("refresh_token", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("refresh_token_expiration", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["bro_id"], ["Bro.id"], name=op.f("fk_BroToken_bro_id_Bro")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_BroToken")),
    )
    op.create_index(op.f("ix_BroToken_access_token"), "BroToken", ["access_token"], unique=False)
    op.create_table(
        "Broup",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("broup_id", sa.Integer(), nullable=False),
        sa.Column("bro_id", sa.Integer(), nullable=False),
        sa.Column("bro_ids", sa.ARRAY(sa.Integer()), nullable=True),
        sa.Column("bro_admin_ids", sa.ARRAY(sa.Integer()), nullable=True),
        sa.Column("broup_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("alias", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("broup_description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("broup_colour", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("last_message_read_time_bro", sa.DateTime(), nullable=False),
        sa.Column("last_time_activity", sa.DateTime(), nullable=False),
        sa.Column("unread_messages", sa.Integer(), nullable=False),
        sa.Column("mute", sa.Boolean(), nullable=False),
        sa.Column("mute_timestamp", sa.DateTime(), nullable=False),
        sa.Column("accepted", sa.Boolean(), nullable=False),
        sa.Column("requested", sa.Boolean(), nullable=True),
        sa.Column("removed", sa.Boolean(), nullable=False),
        sa.Column("is_left", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["bro_id"], ["Bro.id"], name=op.f("fk_Broup_bro_id_Bro")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Broup")),
    )
    op.create_index(
        op.f("ix_Broup_last_message_read_time_bro"),
        "Broup",
        ["last_message_read_time_bro"],
        unique=False,
    )
    op.create_index(
        op.f("ix_Broup_last_time_activity"), "Broup", ["last_time_activity"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_Broup_last_time_activity"), table_name="Broup")
    op.drop_index(op.f("ix_Broup_last_message_read_time_bro"), table_name="Broup")
    op.drop_table("Broup")
    op.drop_index(op.f("ix_BroToken_access_token"), table_name="BroToken")
    op.drop_table("BroToken")
    op.drop_index(op.f("ix_Bro_bromotion"), table_name="Bro")
    op.drop_index(op.f("ix_Bro_bro_name"), table_name="Bro")
    op.drop_table("Bro")
    # ### end Alembic commands ###
